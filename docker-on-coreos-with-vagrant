# Setting up docker with coreos-vagrant

### Clone repo

```
$ git clone https://github.com/coreos/coreos-vagrant/
$ cd coreos-vagrant
$ vagrant up
```

### Configure Vagrantfile

First stop the vagrant machine:

```
$ vagrant halt
```

Up the memory setting to 4G, here's the line you want to change.

```
$vb_memory = 4096
```

* ports being forward from the vagrant machine to your macosx machine.  
* mount the /Users folder as an nfs folder, which is way faster than whatever boot2docker uses for the mount.  This is actually the main reason we're using coreos-vagrant, because boot2docker shared folders is very slow.

Add these lines to the Vagrantfile after `config.vm.network :private_network, ip: ip`:

```ruby
      (49000..49900).each do |port|
        config.vm.network :forwarded_port, :host => port, :guest => port
      end
      config.vm.synced_folder "/Users", "/Users", id: "core", :nfs => true, :mount_options => ['nolock,vers=3,udp']
```

### Configure docker cli on your maosx

Install docker cli via:

```bash
$ curl -o docker http://get.docker.io/builds/Darwin/x86_64/docker-latest
$ mv docker /usr/local/bin/
$ chmod +x /usr/local/bin/docker
```

To enable the remote API for docker by configuring user-data with [this](https://gist.github.com/tongueroo/330c02c37a921ed4a258).  The user-data file is a file at the root of the coreos-vagrant project folder.  More details instructures are [here](https://coreos.com/docs/launching-containers/building/customizing-docker/) at the 'Enable the Remote API on a New Socket' section.

```
$ vagrant up
```

In your ~/.profile , please set this:

```
export DOCKER_HOST=tcp://172.17.8.101:2375
```

Make sure that `DOCKER_TLS_VERIFY` and `DOCKER_CERT_PATH` are **not** set.  These extra environmental variables are required for boot2docker but not for coreos-vagrant's setup.

Docker cli commands should work now on your macosx machine, to test:

```
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
```

If you end up restarting your computer and docker commands do not work anymore, you need to run `vagrant up` as the dockerhost machine is in vagrant now. Basically, `vagrant up` replaces `boot2docker up`.

### Increase disk space

Docker images take up a lot of space so we need a larger disk space than the default that is provided.  We must stop the vagrant machine to resize the disk.  

```
$ vagrant halt
```

Find out the vms we're going to resize, the machine id will be different for your setup.  In this case it machine id happens to be 'coreos-vagrant_core-01_1421819998116_10469'

```
$ VBoxManage list vms
"coreos-vagrant_core-01_1421819998116_10469" {45d123a9-478f-4931-8312-a5b467c9a54e}
$ MID=coreos-vagrant_core-01_1421819998116_10469
$ cd ~/VirtualBox\ VMs/$MID
```

Resize the disk space:

```
$ VBoxManage clonehd coreos_production_vagrant_image.vmdk coreos_production_vagrant_image.vdi --format vdi
$ VBoxManage modifyhd coreos_production_vagrant_image.vdi --resize 128000
$ VBoxManage storageattach $MID --storagectl "IDE Controller" --port 0 --device 0 --type hdd --medium coreos_production_vagrant_image.vdi
```

Go back to the coreos-vagrant project and check:

```
$ cd coreos-vagrant
$ vagrant up
$ vagrant ssh
core@core-01 ~ $ df -h
Filesystem         Size  Used Avail Use% Mounted on
rootfs             121G   23M  116G   1% /
devtmpfs           488M     0  488M   0% /dev
tmpfs              500M     0  500M   0% /dev/shm
tmpfs              500M  228K  499M   1% /run
tmpfs              500M     0  500M   0% /sys/fs/cgroup
/dev/sda9          121G   23M  116G   1% /
/dev/sda3         1001M  306M  644M  33% /usr
tmpfs              500M     0  500M   0% /tmp
tmpfs              500M     0  500M   0% /media
/dev/sda6          108M   88K   99M   1% /usr/share/oem
172.17.8.1:/Users  465G  256G  210G  55% /Users
core@core-01 ~ $ 
```

Notice how the rootfs is much larger now at 121G.

### Useful References

Useful links I used to figure this out:

* [Enable the Remote API on a New Socket](https://coreos.com/docs/launching-containers/building/customizing-docker/#enable-the-remote-api-on-a-new-socket)
* [How to copy docker images from one host to another without via repository?](http://stackoverflow.com/questions/23935141/how-to-copy-docker-images-from-one-host-to-another-without-via-repository)
* [Cooking with Docker and CoreOS on OS X](http://www.siliconfidential.com/articles/docker-coreos-osx/)
* [Resize a Hard Disk for a Virtual Machine](https://gist.github.com/christopher-hopper/9755310)
